import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import styled from 'styled-components';

const Tutorial = () => {
  const navigate = useNavigate();
  const [currentStep, setCurrentStep] = useState(0);

  const tutorialSteps = [
    {
      title: "ÏàòÌïôÍ≥ºÌïô ÎèôÏïÑÎ¶¨ Ìè¨ÎüºÏóê Ïò§Ïã† Í≤ÉÏùÑ ÌôòÏòÅÌï©ÎãàÎã§!",
      content: "Ïù¥ ÌäúÌÜ†Î¶¨ÏñºÏùÑ ÌÜµÌï¥ Ìè¨ÎüºÏùò Ï£ºÏöî Í∏∞Îä•Í≥º ÏÇ¨Ïö©Î≤ïÏùÑ ÏïåÏïÑÎ≥¥Í≤†ÏäµÎãàÎã§.",
      image: "üè†",
      action: "Îã§Ïùå"
    },
    {
      title: "Ìôà ÌôîÎ©¥",
      content: "ÌôàÏóêÏÑúÎäî ÏµúÍ∑º Í≤åÏãúÍ∏ÄÍ≥º Ïπ¥ÌÖåÍ≥†Î¶¨Î•º ÌïúÎààÏóê Î≥º Ïàò ÏûàÏäµÎãàÎã§. \nÏµúÍ∑º 5Í∞úÏùò Í≤åÏãúÍ∏ÄÏù¥ ÌëúÏãúÎêòÎ©∞, \nÍ∞Å Ïπ¥ÌÖåÍ≥†Î¶¨Î≥ÑÎ°ú Í≤åÏãúÍ∏ÄÏùÑ Ï∞æÏïÑÎ≥º Ïàò ÏûàÏäµÎãàÎã§.",
      image: "üìã",
      action: "Îã§Ïùå"
    },
    {
      title: "Í≤åÏãúÌåê",
      content: "Í≤åÏãúÌåêÏóêÏÑúÎäî Î™®Îì† Í≤åÏãúÍ∏ÄÏùÑ \nÏπ¥ÌÖåÍ≥†Î¶¨Î≥ÑÎ°ú ÌïÑÌÑ∞ÎßÅÌïòÏó¨ Î≥º Ïàò ÏûàÏäµÎãàÎã§.\n Î¨ºÎ¶¨, ÌôîÌïô, ÏÉùÎ¨º, ÏßÄÍµ¨Í≥ºÌïô, ÏàòÌïô Ïπ¥ÌÖåÍ≥†Î¶¨Í∞Ä ÏûàÏäµÎãàÎã§.",
      image: "üìö",
      action: "Îã§Ïùå"
    },
    {
      title: "Í≤åÏãúÍ∏Ä ÏûëÏÑ±",
      content: "Write Î©îÎâ¥ÏóêÏÑú ÏÉàÎ°úÏö¥ Í≤åÏãúÍ∏ÄÏùÑ ÏûëÏÑ±Ìï† Ïàò ÏûàÏäµÎãàÎã§.\n ÏùµÎ™Ö/Ïã§Î™Ö ÏÑ†ÌÉùÏù¥ Í∞ÄÎä•ÌïòÎ©∞ \nÏ†úÎ™©, ÎÇ¥Ïö©, Ïπ¥ÌÖåÍ≥†Î¶¨Î•º ÏÑ†ÌÉùÌïòÍ≥† Í≤åÏãúÌï† Ïàò ÏûàÏäµÎãàÎã§.",
      image: "‚úçÔ∏è",
      action: "Îã§Ïùå"
    },
    {
      title: "Í≤åÏãúÍ∏Ä ÏÉÅÏÑ∏Î≥¥Í∏∞",
      content: "Í≤åÏãúÍ∏ÄÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥ ÏÉÅÏÑ∏ ÎÇ¥Ïö©ÏùÑ Î≥º Ïàò ÏûàÏäµÎãàÎã§.\n Ï¢ãÏïÑÏöî, ÎåìÍ∏Ä ÏûëÏÑ±Ïù¥ Í∞ÄÎä•ÌïòÎ©∞\n ÏûêÏã†Ïùò Í∏ÄÍ≥º ÎåìÍ∏ÄÏóê ÌïúÌï¥ ÏàòÏ†ï, ÏÇ≠Ï†ú Í∏∞Îä•ÏùÑ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÏäµÎãàÎã§.",
      image: "üëÅÔ∏è",
      action: "Îã§Ïùå"
    },
    {
      title: "ÎßàÏù¥ ÌéòÏù¥ÏßÄ",
      content: "ÎÇ¥Í∞Ä ÏûëÏÑ±Ìïú Í≤åÏãúÍ∏Ä, ÎåìÍ∏ÄÍ≥º Ï¢ãÏïÑÏöîÌïú Í≤åÏãúÍ∏ÄÏùÑ ÌôïÏù∏Ìï† Ïàò ÏûàÏäµÎãàÎã§. Í∞úÏù∏ ÌôúÎèô ÎÇ¥Ïó≠ÏùÑ ÌïúÎààÏóê Î≥º Ïàò ÏûàÎäî Í≥µÍ∞ÑÏûÖÎãàÎã§.",
      image: "üë§",
      action: "Îã§Ïùå"
    },
    {
      title: "ÌîÑÎ°úÌïÑ ÌéòÏù¥ÏßÄ",
      content: "ÌîÑÎ°úÌïÑ ÌéòÏù¥ÏßÄÏóêÏÑúÎäî ÎÇ¥ Ï†ïÎ≥¥Î•º Í¥ÄÎ¶¨Ìï† Ïàò ÏûàÏäµÎãàÎã§. \nÎ°úÍ∑∏Ïù∏Ïóê ÌïÑÏöîÌïú ÏÇ¨Ïö©ÏûêIDÎ•º Ïñ∏Ï†úÎì†ÏßÄ ÌôïÏù∏, ÏàòÏ†ïÌï† Ïàò ÏûàÏúºÎ©∞ \nÎçî Í∞ïÌïú Î≥¥ÏïàÏùÑ ÏúÑÌï¥ ÏÑ†ÌÉùÏ†ÅÏúºÎ°ú ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏÑ§Ï†ïÌï† Ïàò ÏûàÏäµÎãàÎã§.",
      image: "‚öôÔ∏è",
      action: "Îã§Ïùå"
    },
    {
      title: "Í¥ÄÎ¶¨Ïûê Í≥ÑÏ†ï",
      content: "Í¥ÄÎ¶¨ÏûêÎäî Í≤åÏãúÍ∏ÄÍ≥º ÎåìÍ∏ÄÏùÑ Í¥ÄÎ¶¨Ìï† Ïàò ÏûàÏúºÎ©∞, \nÍ¥ÄÎ¶¨Ïûê Ìå®ÎÑêÏóêÏÑú ÎπÑÎ∞ÄÎ≤àÌò∏Î•º Î≥ÄÍ≤ΩÌï† Ïàò ÏûàÏäµÎãàÎã§. \nÏùºÎ∞ò ÏÇ¨Ïö©ÏûêÎäî Í¥ÄÎ¶¨Ïûê Í∂åÌïúÏù¥ ÏóÜÏúºÎ©∞,\n Í¥ÄÎ¶¨ÏûêÎäî ÏûêÏã†Ïùò Í¥ÄÎ¶¨Ïûê ÎπÑÎ∞ÄÎ≤àÌò∏Îßå Î≥º Ïàò ÏûàÏäµÎãàÎã§.",
      image: "üõ°Ô∏è",
      action: "Îã§Ïùå"
    },
    {
      title: "Ï£ºÏùòÏÇ¨Ìï≠",
      content: "ÏûëÏÑ±Ìïú ÎåìÍ∏ÄÍ≥º Í≤åÏãúÍ∏ÄÏù¥ Îú®ÏßÄ ÏïäÍ±∞ÎÇò ÏÇ≠Ï†ú ÌõÑ Í∏ÄÏù¥ Ïó¨Ï†ÑÌûà ÎÇ®ÏïÑÏûàÎã§Î©¥ Ìï¥Îãπ ÌéòÏù¥ÏßÄÎ•º ÏÉàÎ°úÍ≥†Ïπ®Ìï¥Ï£ºÏÑ∏Ïöî. \nÏÉàÎ°úÍ≥†Ïπ® ÌõÑÏóêÎèÑ Î¨∏Ï†úÍ∞Ä ÏßÄÏÜçÎêòÎ©¥ Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Î≥¥ÏÑ∏Ïöî.",
      image: "‚ö†Ô∏è",
      action: "Îã§Ïùå"
    },
    {
      title: "Ìè¨Îüº Ïù¥Ïö© Í∑úÏπô",
      content: "1. ÏÑúÎ°úÎ•º Ï°¥Ï§ëÌïòÎäî ÎßàÏùåÏúºÎ°ú ÌÜ†Î°†Ìï¥Ï£ºÏÑ∏Ïöî\n2. Í≤ΩÏ≤≠ÌïòÎäî Î¨∏Ìôî ÌòïÏÑ±ÏùÑ ÏúÑÌï¥ ÌÉÄÏù∏Ïùò Í∏ÄÏóê ÎåÄÌïú Î∞òÎ∞ïÎ¨∏ ÏûëÏÑ± Ïãú\n ÏÉÅÎåÄÎ∞©Ïùò Í∏ÄÏùÑ Î®ºÏ†Ä ÏöîÏïΩÌï¥Ï£ºÏÑ∏Ïöî\n3. Î∂ÄÏ†ÅÏ†àÌïú ÎÇ¥Ïö©ÏùÄ Í¥ÄÎ¶¨ÏûêÏóê ÏùòÌï¥ ÏÇ≠Ï†úÎê† Ïàò ÏûàÏäµÎãàÎã§\n4. Í±¥ÏÑ§Ï†ÅÏù∏ ÌÜ†Î°† Î¨∏ÌôîÎ•º ÎßåÎì§Ïñ¥Ï£ºÏÑ∏Ïöî",
      image: "üìú",
      action: "Îã§Ïùå"
    },
    {
      title: "ÌäúÌÜ†Î¶¨Ïñº ÏôÑÎ£å!",
      content: "Ïù¥Ï†ú Ìè¨ÎüºÏùÑ ÏûêÏú†Î°≠Í≤å Ïù¥Ïö©ÌïòÏã§ Ïàò ÏûàÏäµÎãàÎã§.\n Í∂ÅÍ∏àÌïú Ï†êÏù¥ ÏûàÏúºÎ©¥ Ïñ∏Ï†úÎì†ÏßÄ ÌäúÌÜ†Î¶¨ÏñºÏùÑ Îã§Ïãú ÌôïÏù∏Ìï¥Î≥¥ÏÑ∏Ïöî!",
      image: "üéâ",
      action: "ÌôàÏúºÎ°ú Ïù¥Îèô"
    }
  ];

  const handleNext = () => {
    if (currentStep < tutorialSteps.length - 1) {
      setCurrentStep(currentStep + 1);
    } else {
      navigate('/');
    }
  };

  const handlePrevious = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
    }
  };

  const currentTutorial = tutorialSteps[currentStep];

  return (
    <TutorialContainer>
      <TutorialCard>
        <ProgressBar>
          <ProgressFill progress={(currentStep + 1) / tutorialSteps.length * 100} />
        </ProgressBar>
        
        <TutorialContent>
          <TutorialIcon>{currentTutorial.image}</TutorialIcon>
          <TutorialTitle>{currentTutorial.title}</TutorialTitle>
          <TutorialText>{currentTutorial.content}</TutorialText>
        </TutorialContent>

        <TutorialActions>
          <PreviousButton onClick={handlePrevious} disabled={currentStep === 0}>
            Ïù¥Ï†Ñ
          </PreviousButton>
          <NextButton onClick={handleNext}>
            {currentTutorial.action}
          </NextButton>
        </TutorialActions>

        <StepIndicator>
          {tutorialSteps.map((_, index) => (
            <StepDot 
              key={index} 
              active={index === currentStep}
              onClick={() => setCurrentStep(index)}
            />
          ))}
        </StepIndicator>
      </TutorialCard>
    </TutorialContainer>
  );
};

const TutorialContainer = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  padding: 2rem;
`;

const TutorialCard = styled.div`
  background: white;
  border-radius: 16px;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  padding: 3rem;
  max-width: 600px;
  width: 100%;
  position: relative;
`;

const ProgressBar = styled.div`
  width: 100%;
  height: 6px;
  background-color: #f0f0f0;
  border-radius: 3px;
  margin-bottom: 2rem;
  overflow: hidden;
`;

const ProgressFill = styled.div`
  height: 100%;
  background: linear-gradient(90deg, #667eea, #764ba2);
  border-radius: 3px;
  transition: width 0.3s ease;
  width: ${props => props.progress}%;
`;

const TutorialContent = styled.div`
  text-align: center;
  margin-bottom: 2rem;
`;

const TutorialIcon = styled.div`
  font-size: 4rem;
  margin-bottom: 1.5rem;
`;

const TutorialTitle = styled.h1`
  font-size: 1.8rem;
  color: #333;
  margin-bottom: 1rem;
  font-weight: 600;
`;

const TutorialText = styled.p`
  font-size: 1.1rem;
  color: #666;
  line-height: 1.6;
  white-space: pre-line;
`;

const TutorialActions = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
`;

const PreviousButton = styled.button`
  background: none;
  border: 2px solid #ddd;
  color: #666;
  padding: 0.8rem 1.5rem;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  transition: all 0.2s;

  &:hover:not(:disabled) {
    border-color: #999;
    color: #333;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
`;

const NextButton = styled.button`
  background: linear-gradient(135deg, #667eea, #764ba2);
  border: none;
  color: white;
  padding: 0.8rem 2rem;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
  transition: transform 0.2s;

  &:hover {
    transform: translateY(-2px);
  }
`;

const StepIndicator = styled.div`
  display: flex;
  justify-content: center;
  gap: 0.5rem;
`;

const StepDot = styled.div`
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: ${props => props.active ? '#667eea' : '#ddd'};
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    background-color: ${props => props.active ? '#667eea' : '#bbb'};
  }
`;

export default Tutorial; 